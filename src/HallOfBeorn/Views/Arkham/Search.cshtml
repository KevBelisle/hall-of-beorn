@using HallOfBeorn.Models.Arkham.ViewModels
@model ArkhamSearchViewModel

@{
    ViewBag.Title = "Arkham Horror: The Card Game - Search";
}

@section scripts {
<script type="text/javascript" src="~/Scripts/arkhamCardSearch.js"></script>
<script type="text/javascript" src="~/Scripts/arkhamAutocomplete1.js"></script>
<script type="text/javascript">
    $(function () {
        $("#Query").autocomplete({
            source: autocompleteSource,
            minLength: 2
        });
        $("#Query").autocomplete("widget").addClass("autocompleteClass");
    });
</script>    

}

@using (Html.BeginForm("Search", "Arkham", FormMethod.Post))
{
    <div style="margin-bottom:10px;">
        <div style="display:inline-block;min-width:300px;margin-right:4px;">@Html.TextBoxFor(x => x.Query, new { style = "text-align:left;width:95%;margin-right:4px;" })</div>
        <div style="display:inline-block;">
            <input type="submit" value="Search" class="search-button" />
            <a id="resetButton" href="#" class="clear-button">Clear</a>
            <span style="display:inline-block;">
            <span class="search-label-right">Sort</span>
            @Html.DropDownListFor(x => x.Sort, ArkhamSearchViewModel.Sorts, new { @class = "search-select-medium" })
            </span>
            <span style="display:inline-block">
            <span class="search-label-right">View</span>
            @Html.DropDownListFor(x => x.View, ArkhamSearchViewModel.Views, new { @class = "search-select-medium" })
            </span>
        </div>
    </div>

     <div class="search-row">
         <div class="search-section">Set</div>
        <div class="search-items">
            <span class="search-filter-fixed-long">
            <span class="search-label-short">Product</span>
            @Html.DropDownListFor(x => x.Product, ArkhamSearchViewModel.Products, new { @class = "search-select" })
            </span>

            <span class="search-filter-fixed-long">
            <span class="search-label-short">Encounter</span>
            @Html.DropDownListFor(x => x.EncounterSet, ArkhamSearchViewModel.EncounterSets, new { @class = "search-select" })
            </span>

            <span class="search-filter-fixed-long">
            <span class="search-label-short">Artist</span>
            @Html.DropDownListFor(x => x.Artist, ArkhamSearchViewModel.ArtistValues, new { @class = "search-select" })
            </span>
        </div>
    </div>
    
     <div class="search-row">
         <div class="search-section">Type</div>
         <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-short">Card Type</span>
            @Html.DropDownListFor(x => x.CardType, ArkhamSearchViewModel.CardTypes, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Class Symbol</span>
            @Html.DropDownListFor(x => x.ClassSymbol, ArkhamSearchViewModel.ClassSymbolValues, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Deck Type</span>
            @Html.DropDownListFor(x => x.DeckType, ArkhamSearchViewModel.DeckTypes, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Subtype</span>
            @Html.DropDownListFor(x => x.CardSubtype, ArkhamSearchViewModel.CardSubtypes, new { @class = "search-select-short2" })
            </span>
        </div>
    </div>

    <div class="search-row">
        <div class="search-section">Text</div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-short">Trait</span>
            @Html.DropDownListFor(x => x.Trait, ArkhamSearchViewModel.Traits, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Keyword</span>
            @Html.DropDownListFor(x => x.Keyword, ArkhamSearchViewModel.Keywords, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Skill Icon</span>
            @Html.DropDownListFor(x => x.SkillIcon, ArkhamSearchViewModel.SkillIconValues, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Asset Slot</span>
            @Html.DropDownListFor(x => x.Slot, ArkhamSearchViewModel.SlotValues, new { @class = "search-select-short" })
            </span>
        </div>
    </div>
    
    <div class="search-row">
        <div class="search-section"></div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-short">Victory</span>
            @Html.DropDownListFor(x => x.VictoryPoints, ArkhamSearchViewModel.VictoryPointsValues, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-short">Unique</span>
            @Html.DropDownListFor(x => x.IsUnique, ArkhamSearchViewModel.UniquenessValues, new { @class = "search-select-short" })
            </span>
        </div>
    </div>
    
    <hr class="arkham-filterLine" />
    
    <div class="search-row">
        <div class="search-section">Stats</div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Willpower.png"></span>
            @Html.DropDownListFor(x => x.WillpowerOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Willpower, ArkhamSearchViewModel.WillpowerValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Intellect.png"></span>
            @Html.DropDownListFor(x => x.IntellectOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Intellect, ArkhamSearchViewModel.IntellectValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Combat.png"></span>
            @Html.DropDownListFor(x => x.CombatOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Combat, ArkhamSearchViewModel.CombatValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Agility.png"></span>
            @Html.DropDownListFor(x => x.AgilityOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Agility, ArkhamSearchViewModel.AgilityValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <div class="search-row">
        <div class="search-section"></div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Health.png" width="17" height="20"></span>
            @Html.DropDownListFor(x => x.HealthOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Health, ArkhamSearchViewModel.HealthValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2"><img src="/Images/Arkham/Sanity.png" width="20" height="16"></span>
            @Html.DropDownListFor(x => x.SanityOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Sanity, ArkhamSearchViewModel.SanityValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Cost</span>
            @Html.DropDownListFor(x => x.CostOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Cost, ArkhamSearchViewModel.CostValues, new { @class = "search-select-tiny2" })
            </span>
            
            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Level</span>
            @Html.DropDownListFor(x => x.LevelOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Level, ArkhamSearchViewModel.LevelValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <hr class="arkham-filterLine" />
        
    <div class="search-row">
        <div class="search-section">Scenario</div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Doom</span>
            @Html.DropDownListFor(x => x.DoomThresholdOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.DoomThreshold, ArkhamSearchViewModel.DoomThresholdValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Clue</span>
            @Html.DropDownListFor(x => x.ClueThresholdOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.ClueThreshold, ArkhamSearchViewModel.ClueThresholdValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <div class="search-row">
        <div class="search-section">Enemy</div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Fight</span>
            @Html.DropDownListFor(x => x.EnemyFightValueOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.EnemyFightValue, ArkhamSearchViewModel.EnemyFightValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Health</span>
            @Html.DropDownListFor(x => x.EnemyHealthValueOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.EnemyHealthValue, ArkhamSearchViewModel.EnemyHealthValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Evade</span>
            @Html.DropDownListFor(x => x.EnemyEvadeValueOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.EnemyEvadeValue, ArkhamSearchViewModel.EnemyEvadeValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <div class="search-row">
        <div class="search-section"></div>
        <div class="search-items">
            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Damage</span>
            @Html.DropDownListFor(x => x.DamageOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Damage, ArkhamSearchViewModel.DamageValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Horror</span>
            @Html.DropDownListFor(x => x.HorrorOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Horror, ArkhamSearchViewModel.HorrorValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <div class="search-row">
        <div class="search-section">Location</div>
        <div class="search-items">
            <span class="search-filter-fixed">
                <span class="search-label-short2">Symbol</span>
                @Html.DropDownListFor(x => x.LocationSymbol, ArkhamSearchViewModel.ConnectionSymbols, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
                <span class="search-label-short2">Connects</span>
                @Html.DropDownListFor(x => x.ConnectsTo, ArkhamSearchViewModel.ConnectionSymbols, new { @class = "search-select-short" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Shroud</span>
            @Html.DropDownListFor(x => x.ShroudOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.Shroud, ArkhamSearchViewModel.ShroudValues, new { @class = "search-select-tiny2" })
            </span>

            <span class="search-filter-fixed">
            <span class="search-label-tiny2">Clues</span>
            @Html.DropDownListFor(x => x.ClueValueOp, ArkhamSearchViewModel.NumericOperators, new { @class = "search-select-tiny2" })
            @Html.DropDownListFor(x => x.ClueValue, ArkhamSearchViewModel.ClueValues, new { @class = "search-select-tiny2" })
            </span>
        </div>
    </div>
    <span class="results-count-label">@Model.GetResultsCount()</span>
    
    foreach (var card in @Model.Cards())
    {
        <hr class="arkham-filterLine" />
    
        if (!@Model.View.HasValue || @Model.View.Value == ArkhamSearchView.Card || @Model.View.Value == ArkhamSearchView.Card_Image) {
            <div style="display: inline-block">
                <div><img src="@card.ImagePathFront" height="@card.ImageHeight" width="@card.ImageWidth" /></div>
                @*
                @if (!string.IsNullOrEmpty(@card.ImagePathBack))
                {
                    <div><img src="@card.ImagePathBack" height="@card.ImageHeight"/></div>
                }
                *@
            </div>
        }
        <div style="display:inline-block;max-width:500px;vertical-align:top;margin-left: 4px;">
            <div class="arkham-statSection">
                @if (!string.IsNullOrEmpty(@card.ClassName))
                {
                    <div class="arkham-statBox"><a href="@card.ClassUrl">@Html.Raw(@card.ClassIcon)</a></div>
                }
                <div class="arkham-statBox top">
                    <div class="arkham-title">
                    @if (@card.IsUnique)
                    {
                        <a href="@card.SearchUrl"><img src="/Images/Arkham/Unique.png" class="arkham-unique"/>@card.DisplayName</a>
                    } else {
                        <a href="@card.SearchUrl">@card.DisplayName</a>
                    }
                    </div>
                    @if (!string.IsNullOrEmpty(@card.Subtitle)) {
                        <div class="arkham-subtitle">@card.Subtitle</div>
                    }
                </div>
                    
                @if (@card.CardType == "Investigator") {
                    <div class="arkham-statBox arkham-skillSection">
                        <a href="/Arkham?Willpower=@card.Willpower&WillpowerOp=eq"><span class="arkham-skillBox"><span class="arkham-skillValue">@card.Willpower</span><img src="/Images/Arkham/Willpower.png" title="Willpower" class="arkham-skillIcon"/></span></a>
                        <a href="/Arkham?Intellect=@card.Intellect&IntellectOp=eq"><span class="arkham-skillBox"><span class="arkham-skillValue">@card.Intellect</span><img src="/Images/Arkham/Intellect.png" title="Intellect" class="arkham-skillIcon"/></span></a>
                        <a href="/Arkham?Combat=@card.Combat&CombatOp=eq"><span class="arkham-skillBox"><span class="arkham-skillValue">@card.Combat</span><img src="/Images/Arkham/Combat.png" title="Combat" class="arkham-skillIcon"/></span></a>
                        <a href="/Arkham?Agility=@card.Agility&AgilityOp=eq"><span class="arkham-skillBox"><span class="arkham-skillValue">@card.Agility</span><img src="/Images/Arkham/Agility.png" title="Agility" class="arkham-skillIcon"/></span></a>
                    </div>
                }

                @if (!string.IsNullOrEmpty(@card.Cost)) {
                    <div class="arkham-statBox top"><a href="/Arkham?Cost=@card.Cost&CostOp=eq"><span class="arkham-circle arkham-cost" title="Cost"><span class="arkham-valueInner">@card.Cost</span></span></a></div>
                }
                @if (!string.IsNullOrEmpty(@card.ClueThreshold)) {
                    <div class="arkham-statBox top"><div class="arkham-circle arkham-clueValue" title="Clue Threshold"><div class="arkham-valueInner">@Html.Raw(@card.ClueThreshold)</div></div></div>
                }
                @if (!string.IsNullOrEmpty(@card.DoomThreshold)) {
                    <div class="arkham-statBox top"><div class="arkham-doomThreshold" title="Doom Threshold"><div class="arkham-valueInner">@Html.Raw(@card.DoomThreshold)</div></div></div>
                }
                @if (!string.IsNullOrEmpty(@card.Shroud)) {
                    <div class="arkham-statBox top"><div class="arkham-circle arkham-shroud" title="Shroud"><div class="arkham-valueInner">@Html.Raw(@card.Shroud)</div></div></div>    
                }
                @if (!string.IsNullOrEmpty(@card.ClueValue)) {
                    <div class="arkham-statBox top"><div class="arkham-circle arkham-clueValue" title="Clue Value"><div class="arkham-valueInner">@Html.Raw(@card.ClueValue)</div></div></div>   
                }
                @if (@card.CardType == "Enemy") {
                    <div class="arkham-enemyStatSection">@Html.Raw(@card.EnemyStatHtml())</div>
                }
            </div>
            
            @if (@card.HasSkillIcons()) {
                <div class="arkham-statSection">
                    @foreach (var icon in @card.SkillIcons()) {
                        <span>@Html.Raw(icon.ToString())</span>
                    }
                </div>
            }

            @if (@card.HasTraits()) {
                <div class="arkham-statSection">
                    @foreach (var trait in @card.Traits()) {
                        <span>@Html.Raw(trait.ToString())</span>
                    }
                </div>
            }

            @if ((!@Model.View.HasValue || @Model.View.Value == ArkhamSearchView.Card || @Model.View.Value == ArkhamSearchView.Card_Text) && !string.IsNullOrEmpty(@card.FrontBodyHtml()))
            {
                @Html.Raw(@card.FrontBodyHtml())
            }

            <div class="arkham-statSection">
                @if (!string.IsNullOrEmpty(@card.Health) || !string.IsNullOrEmpty(@card.Sanity)) {
                    <a href="/Arkham?Health=@card.Health"><span class="arkham-health" title="Health"><span class="arkham-energyInner arkham-healthInner">@card.Health</span></span></a>
                    <a href="/Arkham?Sanity=@card.Sanity"><span class="arkham-sanity" title="Sanity"><span class="arkham-energyInner arkham-sanityInner">@card.Sanity</span></span></a>
                }

                @if (!string.IsNullOrEmpty(@card.SlotImagePath)) {
                    <div class="arkham-slot"><a href="@card.SlotSearch" target="_blank"><img src="@card.SlotImagePath" title="Asset Slot" height="32" width="32"/></a></div>
                }
            </div>

            @if (!string.IsNullOrEmpty(@card.Victory)) {
                <div class="arkham-statSection"><a href="/Arkham?VictoryPoints=@card.Victory" title="Victory Points"><b>@card.Victory.</b></a></div>
            }

            <div class="arkham-statSection">
            @if (@card.Damage > 0) {
                <div class="arkham-statBox arkham-damageBox">
                @for (var i=0;i<@card.Damage;i++) {
                    <img src="/Images/Arkham/Health.png" height="15" width="12" title="Damage"/> 
                }
                </div>
            }

            @if (@card.Horror > 0) {
                <div class="arkham-statBox arkham-horrorBox">
                @for (var i=0;i<@card.Horror;i++) {
                    <img src="/Images/Arkham/Sanity.png" height="14" width="17" title="Horror" />
                }
                </div>
            }
            </div>
        </div>
    }
}